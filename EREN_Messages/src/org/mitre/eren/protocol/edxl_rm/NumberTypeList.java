//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.05.26 at 12:27:28 PM EDT 
//


package org.mitre.eren.protocol.edxl_rm;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for NumberTypeList.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="NumberTypeList">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString">
 *     &lt;enumeration value="RangeFrom"/>
 *     &lt;enumeration value="Range"/>
 *     &lt;enumeration value="RangeTo"/>
 *     &lt;enumeration value="Prefix"/>
 *     &lt;enumeration value="Suffix"/>
 *     &lt;enumeration value="Number"/>
 *     &lt;enumeration value="Separator"/>
 *     &lt;enumeration value="Extension"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "NumberTypeList")
@XmlEnum
public enum NumberTypeList {


    /**
     * Indicates that the element contains the lower value of a range, e.g. 25 in 25-37
     * 
     */
    @XmlEnumValue("RangeFrom")
    RANGE_FROM("RangeFrom"),

    /**
     * Indicates that the value is a range, e.g. 25-37
     * 
     */
    @XmlEnumValue("Range")
    RANGE("Range"),

    /**
     * Indicates that the element contains the top value of a range, e.g. 25 in 25-37
     * 
     */
    @XmlEnumValue("RangeTo")
    RANGE_TO("RangeTo"),

    /**
     * Indicates that the element contains some value that is important, but not exactly the number itself. E.g. A250, where A is the prefix to the number 250
     * 
     */
    @XmlEnumValue("Prefix")
    PREFIX("Prefix"),

    /**
     * Indocates that the element contains some value that is important, but not exactly the number itself. E.g. 'bis' in '45 bis'
     * 
     */
    @XmlEnumValue("Suffix")
    SUFFIX("Suffix"),

    /**
     * Indicates that the value is number, e.g. 2020 in ID 2020. The actual value can be alpha-numeric. 
     * 
     */
    @XmlEnumValue("Number")
    NUMBER("Number"),

    /**
     * Indicates that the value is a separator that is expected to be preserved. Examples are / - #, etc.
     * 
     */
    @XmlEnumValue("Separator")
    SEPARATOR("Separator"),

    /**
     * Indicates that the value is an extension number of some identifier, e.g. 01 in ID 2330-01. 01 could be mean a specific semantics
     * 
     */
    @XmlEnumValue("Extension")
    EXTENSION("Extension");
    private final String value;

    NumberTypeList(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static NumberTypeList fromValue(String v) {
        for (NumberTypeList c: NumberTypeList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
