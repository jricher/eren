package org.mitre.eren.display.dialog.expander{	import fl.transitions.Tween;	import fl.transitions.easing.Strong;	import fl.transitions.TweenEvent;	import flash.display.*;	import flash.events.*;		/**	 * Custom AS3 scroll bar class. 	 * 	 * @author Amanda Anganes	 */	public class ScrollBar extends Sprite	{		private var yOffset:Number;		private var yMin:Number;		private var yMax:Number;		private var h:Number;		private var w:Number;		private var t:Number;		private var thumb:Sprite;		private var track:Sprite;				private var _stage:Stage;		private var theTween:Tween;				/**		 * Constructor.		 * 		 * @param	height the height of the scrollbar		 * @param	width the width of the scrollbar		 * @param	tp height of the thumb, expressed as a decimal percentage of the total height 		 * 			(ie a value of 0.5 equates to 50% and would give a thumb that is half the height of the track)		 * @param	s reference to the Stage		 */		public function ScrollBar(height:Number, width:Number, tp:Number, s:Stage):void		{			_stage = s;			h = height;			w = width;			t = tp;			yMin = 0;			//ThumbPercent * height gives the actual height of the thumb			yMax = height - (tp * height);						track = new Sprite();			track.graphics.beginFill(0x404C58, .9);			track.graphics.drawRoundRect(0, 0, w, h, 10, 10);			track.graphics.endFill();						addChild(track);						thumb = new Sprite();			thumb.graphics.beginFill(0x717E8C, .9);			thumb.graphics.drawRoundRect(0, 0, w, (h * t), 10, 10);			thumb.graphics.endFill();						addChild(thumb);						this.addEventListener(Event.ADDED_TO_STAGE, onAdded);		}				private function onAdded(e:Event):void {			this._stage = stage;			thumb.addEventListener(MouseEvent.MOUSE_DOWN, thumbDown);			_stage.addEventListener(MouseEvent.MOUSE_UP, thumbUp);		}				public function resizeTrack(contentHeight:Number, boxHeight:Number):void {			var percent:Number = boxHeight / contentHeight;			if (percent > 1) { 				percent = 1;							}			this.t = percent;			//trace("resizing thumb: percent = " + percent);			thumb.graphics.clear();			thumb.graphics.beginFill(0x717E8C, .9);			thumb.graphics.drawRoundRect(0, 0, w, (h * t), 10, 10);			thumb.graphics.endFill();			yMax = height - (t * height);		}				/**		 * Scroll to the position indicated by percentage p		 * @param	p		 */		public function scrollToPercentage(p:Number):void 		{			var pos:Number = p * yMax;			theTween = new Tween(thumb, "y", Strong.easeOut, thumb.y, pos, .3, true);			theTween.addEventListener(TweenEvent.MOTION_CHANGE, motionChange);		}				private function motionChange(t:TweenEvent):void 		{			dispatchEvent(new ScrollBarEvent(thumb.y / yMax));		}				private function thumbDown(e:MouseEvent):void		{			_stage.addEventListener(MouseEvent.MOUSE_MOVE, thumbMove);			yOffset = mouseY - thumb.y;		}		private function thumbUp(e:MouseEvent):void		{			_stage.removeEventListener(MouseEvent.MOUSE_MOVE, thumbMove);		}		private function thumbMove(e:MouseEvent):void		{			thumb.y = mouseY - yOffset;			if(thumb.y <= yMin)				thumb.y = yMin;			if(thumb.y >= yMax)				thumb.y = yMax;			dispatchEvent(new ScrollBarEvent(thumb.y / yMax));			e.updateAfterEvent();		}	}}